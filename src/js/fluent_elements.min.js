class ContextMenu extends HTMLElement{connectedCallback(){const Header=null!=this.attributes.Header?this.attributes.Header.value:"",Url=null!=this.attributes.Url?this.attributes.Url.value:"#";setTimeout(()=>this.outerHTML='<div style="'+this.style.cssText+'" class="fluent-context-menu-container" style=""><a href="'+Url+'">'+Header+'</a><div class="fluent-context-menu"><ul>'+this.innerHTML+"</ul></div></div>")}}customElements.define("fluent-contextmenu",ContextMenu);class ContextMenuItem extends HTMLElement{connectedCallback(){const Url=null!=this.attributes.Url?this.attributes.Url.value:"#",Selected=null!=this.attributes.Selected?"selected":"";setTimeout(()=>{this.hasAttribute("selectable")?this.outerHTML='<li><a class="fluent-menu-item-select"'+AttributesToString(this)+">"+this.innerHTML||"</a></li>":this.outerHTML='<li><a class="fluent-menu-item"'+AttributesToString(this)+">"+this.innerHTML||"</a></li>"})}}customElements.define("fluent-contextmenu-item",ContextMenuItem);class Expander extends HTMLElement{connectedCallback(){const Header=null!=this.attributes.Header?this.attributes.Header.value:"";setTimeout(()=>{this.hasAttribute("expanded")?this.outerHTML='<div style="'+this.style.cssText+'" class="fluent-expander"><div class="fluent-expander-header"><p>'+Header+'</p><div><img class="fluent-expander-arrow" style="transform: rotate(180deg)" src="https://resources.bexcool.eu/fluentwebframework/src/img/arrow_down.svg"></div></div><div class="fluent-expander-body expanded">'+this.innerHTML+"</div></div>":this.outerHTML='<div style="'+this.style.cssText+'" class="fluent-expander"><div class="fluent-expander-header"><p>'+Header+'</p><div><img class="fluent-expander-arrow" src="https://resources.bexcool.eu/fluentwebframework/src/img/arrow_down.svg"></div></div><div class="fluent-expander-body">'+this.innerHTML+"</div></div>"})}}customElements.define("fluent-expander",Expander);class Border extends HTMLElement{connectedCallback(){setTimeout(()=>this.outerHTML='<div style="'+this.style.cssText+'" class="fluent-background-border">'+this.innerHTML+"</div>")}}customElements.define("fluent-border",Border);class ToggleButton extends HTMLElement{connectedCallback(){setTimeout(()=>this.outerHTML='<button style="'+this.style.cssText+'" class="fluent-button">'+this.innerHTML+"</button>")}}customElements.define("fluent-togglebutton",ToggleButton);